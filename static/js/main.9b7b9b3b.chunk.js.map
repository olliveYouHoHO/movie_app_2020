{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","setTimeout","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"sUAiBeA,MAbf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,yBAAKG,UAAU,oBACX,qIAIA,yD,gFCkCGC,MAvCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,yBAAKN,UAAU,SACX,kBAAC,IAAD,CACIO,GAAI,CACAC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,YAG3C,yBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,yBAAKF,UAAU,eACX,wBAAIA,UAAU,gBAAgBE,GAC9B,wBAAIF,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,iBACTM,EAAOM,KAAI,SAACC,EAAOC,GAChB,OACI,wBAAIC,IAAKD,EAAOd,UAAU,eACrBa,OAKjB,uBAAGb,UAAU,iBAAiBI,EAAQY,MAAM,EAAG,UCwCpDC,G,kNAzDbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IANjC,2C,mEAUU,IAAD,OACnBQ,YAAW,WACT,EAAKD,SAAS,CAAEP,WAAW,MAC1B,O,0CAKHS,KAAKP,c,+BAQG,IAAD,EACuBO,KAAKlB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASnB,UAAU,aAChBkB,EACC,yBAAKlB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZmB,EAAOP,KAAI,SAACgB,GAAD,OACV,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZD,MAAO0B,EAAM1B,MACbE,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,kB,GAlDXyB,IAAMC,Y,MCKVC,MAXf,WAGI,OACI,yBAAKjC,UAAU,OACX,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCUG2B,E,kLAjBU,IAAD,EACcP,KAAK9B,MAA3BsC,EADQ,EACRA,SAAUC,EADF,EACEA,aACGC,IAAjBF,EAAS1B,OACT2B,EAAQE,KAAK,O,+BAGX,IACCH,EAAYR,KAAK9B,MAAjBsC,SACP,OAAIA,EAAS1B,MACF,8BAAO0B,EAAS1B,MAAMP,OAGtB,S,GAbE6B,IAAMC,WCqBZO,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,kBAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW9C,IAChC,kBAAC,IAAD,CAAO4C,KAAK,gBAAgBE,UAAWR,MCb7CS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9b7b9b3b.chunk.js","sourcesContent":["// 개발자 소개 화면\r\nimport React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"Freedom is the freedom to say that two plus two makes four.\r\n                If that is granted, all else follows.\"\r\n            </span>\r\n            <span>- George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// 시놉시스를 180자로 제한\r\n// --> slice(시작, 끝) 함수를 통해 문자열 적용\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link\r\n                to={{\r\n                    pathname: '/movie-detail',\r\n                    state: { year, title, summary, poster, genres },\r\n                }}\r\n            >\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <ul className=\"movie__genres\">\r\n                        {genres.map((genre, index) => {\r\n                            return (\r\n                                <li key={index} className=\"movie_genre\">\r\n                                    {genre}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <p className=\"movie_summary\">{summary.slice(0, 180)}</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n// 데이터의 정의 및 관리를 위해\r\n// propTypes의 대소문자 코딩 조심!!\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","// 영화 앱 화면\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\n// axios: 영화 데이터를 로딩하기 위한 JS의 fetch() 대체 도구\r\n// 영화 데이터= YTS 영화데이터 API (토렌트 파일이라 불법)\r\n//             https://github.com/serranoarevalo/yts-proxy\r\n\r\nclass Home extends React.Component {\r\n  // 로딩 중 표시 기능\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    this.setState({ movies: movies, isLoading: false });\r\n  };\r\n\r\n  // 로딩 중\r\n  componentWillMount() {\r\n    setTimeout(() => {\r\n      this.setState({ isLoading: false });\r\n    }, 6000)\r\n  }\r\n  // 로딩 후\r\n  componentDidMount() {\r\n    // async& await: 특정 함수는 시간을 필요로 한다는 것을 알리는 키워드\r\n    this.getMovies();\r\n  }\r\n\r\n\r\n  // Warning: Invalid DOM property `class`. Did you mean `className`?\r\n  // --> html코드의 class=> className으로 바꾸라는 뜻\r\n  // Warning: Failed prop type: The prop `genres` is marked as required in `Movie`, but its value is `undefined`.\r\n  // --> genres props를 필요로 한다는 뜻\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n            />))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    // <a href=\"/\">Home</a> = 리액트가 죽고 새 페이지가 열림\r\n    // --> react-router-dom의 Link컴포넌트 사용\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if (location.state===undefined) {\r\n            history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        const {location} = this.props;\r\n        if (location.state) {\r\n            return <span>{location.state.title}</span>;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Navigator from './components/Navigation';\nimport Detail from './routes/Detail';\n\n// path=\"/\" :기본으로 보여줄 컴포넌트\n// path=\"/home/introduction\" :http://localhost:3000/#/home/introduction\n// --> Home과 Introduction이 모두 보임. /home으로 시작하는 모든 것을 출력\n//     Route컴포넌트가 path props와 정확히 일치하는 URL에만 반응하도록\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigator />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// React는 최종으로 단 하나의 컴포넌트를 그림\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}